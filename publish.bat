@echo off

REM –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ PyPI (Windows)

echo üöÄ Publishing JSLORM to PyPI...

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if not exist "pyproject.toml" (
    echo ‚ùå pyproject.toml not found. Run from project root.
    exit /b 1
)

REM –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
echo üì¶ Installing build dependencies...
pip install --upgrade build twine

REM –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–±–æ—Ä–∫–∏
echo üßπ Cleaning old builds...
if exist "dist" rmdir /s /q dist
if exist "build" rmdir /s /q build
for /d %%i in (*.egg-info) do rmdir /s /q "%%i"

REM –°–æ–±–∏—Ä–∞–µ–º –ø–∞–∫–µ—Ç
echo üî® Building package...
python -m build

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–∫–µ—Ç
echo üîç Checking package...
python -m twine check dist/*

REM –ü—É–±–ª–∏–∫—É–µ–º –≤ Test PyPI (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
echo üß™ Publishing to Test PyPI...
echo Enter your Test PyPI credentials:
python -m twine upload --repository testpypi dist/*

echo.
echo ‚úÖ Published to Test PyPI!
echo üîó Check: https://test.pypi.org/project/jslorm/
echo.
echo To install from Test PyPI:
echo pip install --index-url https://test.pypi.org/simple/ jslorm
echo.
echo If everything works, publish to real PyPI:
echo python -m twine upload dist/*

pause